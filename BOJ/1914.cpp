// 하노이 탑
// https://www.acmicpc.net/problem/1914

#include <iostream>
#include <string>
#include <vector>
using namespace std;

string resn[101]{
	"",
	"1",
	"3",
	"7",
	"15",
	"31",
	"63",
	"127",
	"255",
	"511",
	"1023",
	"2047",
	"4095",
	"8191",
	"16383",
	"32767",
	"65535",
	"131071",
	"262143",
	"524287",
	"1048575",
	"2097151",
	"4194303",
	"8388607",
	"16777215",
	"33554431",
	"67108863",
	"134217727",
	"268435455",
	"536870911",
	"1073741823",
	"2147483647",
	"4294967295",
	"8589934591",
	"17179869183",
	"34359738367",
	"68719476735",
	"137438953471",
	"274877906943",
	"549755813887",
	"1099511627775",
	"2199023255551",
	"4398046511103",
	"8796093022207",
	"17592186044415",
	"35184372088831",
	"70368744177663",
	"140737488355327",
	"281474976710655",
	"562949953421311",
	"1125899906842623",
	"2251799813685247",
	"4503599627370495",
	"9007199254740991",
	"18014398509481983",
	"36028797018963967",
	"72057594037927935",
	"144115188075855871",
	"288230376151711743",
	"576460752303423487",
	"1152921504606846975",
	"2305843009213693951",
	"4611686018427387903",
	"9223372036854775807",
	"18446744073709551615",
	"36893488147419103231",
	"73786976294838206463",
	"147573952589676412927",
	"295147905179352825855",
	"590295810358705651711",
	"1180591620717411303423",
	"2361183241434822606847",
	"4722366482869645213695",
	"9444732965739290427391",
	"18889465931478580854783",
	"37778931862957161709567",
	"75557863725914323419135",
	"151115727451828646838271",
	"302231454903657293676543",
	"604462909807314587353087",
	"1208925819614629174706175",
	"2417851639229258349412351",
	"4835703278458516698824703",
	"9671406556917033397649407",
	"19342813113834066795298815",
	"38685626227668133590597631",
	"77371252455336267181195263",
	"154742504910672534362390527",
	"309485009821345068724781055",
	"618970019642690137449562111",
	"1237940039285380274899124223",
	"2475880078570760549798248447",
	"4951760157141521099596496895",
	"9903520314283042199192993791",
	"19807040628566084398385987583",
	"39614081257132168796771975167",
	"79228162514264337593543950335",
	"158456325028528675187087900671",
	"316912650057057350374175801343",
	"633825300114114700748351602687",
	"1267650600228229401496703205375"
};

void hanoi(int n, int from, int by, int to) {
	if (n == 1)
		cout << from << ' ' << to << '\n';
	else {
		hanoi(n - 1, from, to, by);
		cout << from << ' ' << to << '\n';
		hanoi(n - 1, by, from, to);
	}
}

int main(void) {
	cin.tie(NULL);
	ios_base::sync_with_stdio(false);

	int n;
	cin >> n;
	cout << resn[n] << '\n';
	if (n <= 20)
		hanoi(n, 1, 2, 3);
}

// n개의 원판이 있는 하노이 탑을 맞추기 위해 이동해야 하는 원판의 최소 개수와 n <= 20일 경우 그 방법 출력하기

// 필요한 횟수는 2^n - 1 - 다만 2^100은 long long 안에서도 커버가 불가능
// 따라서 2^100까지의 수를 미리 구해둔 뒤 그 결과를 문자열 배열로 만들어 출력하기

// 이동 횟수는 재귀 기반으로 알 수 있음 - n, from, by, to 등 4개의 매개 변수 활용(남은 원반 수, 원판이 있는 곳, 중간, 옮길 곳)
// n == 1인 경우 from에서 to로 옮기는 것을 출력하고, 그렇지 않다면 옮기려는 원반 위에 쌓인 n-1개의 원반을 by 위치로 옮긴 후, 목표 원반을 옮기고 by 위치에 있던 원반 더미를 to로 옮기기
// 즉, 재귀함수에서 n이 주어질 때, from 자리에 n개의 원판이 차례대로 있는 것이 보장되는 것 - 이를 이용해 빼려는 원반 위의 것들을 by로 옮겨주는 것
// 재귀함수가 호출 될 때마다 원반이 하나씩 움직이므로, 결과값이 long long 범위 안에 있었다면 재귀 함수 호출 횟수를 세는 것으로 결과를 얻을 수 있었을 것